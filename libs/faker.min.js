// Faker.js library for Chrome extension
// Using a simplified version with essential functions

(function (global) {
  "use strict";

  // Simple random number generator
  function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  function randomElement(array) {
    return array[Math.floor(Math.random() * array.length)];
  }

  // Data arrays
  const firstNames = [
    "James",
    "Mary",
    "John",
    "Patricia",
    "Robert",
    "Jennifer",
    "Michael",
    "Linda",
    "William",
    "Elizabeth",
    "David",
    "Barbara",
    "Richard",
    "Susan",
    "Joseph",
    "Jessica",
    "Thomas",
    "Sarah",
    "Christopher",
    "Karen",
    "Charles",
    "Nancy",
    "Daniel",
    "Lisa",
    "Matthew",
    "Helen",
    "Anthony",
    "Sandra",
    "Mark",
    "Donna",
  ];
  const lastNames = [
    "Smith",
    "Johnson",
    "Williams",
    "Brown",
    "Jones",
    "Garcia",
    "Miller",
    "Davis",
    "Rodriguez",
    "Martinez",
    "Hernandez",
    "Lopez",
    "Gonzalez",
    "Wilson",
    "Anderson",
    "Thomas",
    "Taylor",
    "Moore",
    "Jackson",
    "Martin",
    "Lee",
    "Perez",
    "Thompson",
    "White",
    "Harris",
    "Sanchez",
    "Clark",
    "Ramirez",
    "Lewis",
    "Robinson",
  ];
  const domains = [
    "gmail.com",
    "yahoo.com",
    "hotmail.com",
    "outlook.com",
    "example.com",
    "test.com",
    "demo.com",
  ];
  const companies = [
    "Tech Corp",
    "Innovation Inc",
    "Digital Solutions",
    "Future Systems",
    "Smart Technologies",
    "Global Enterprises",
    "Dynamic Group",
    "Advanced Solutions",
    "Premier Systems",
    "Elite Technologies",
  ];
  const streets = [
    "Main St",
    "Oak Ave",
    "Park Rd",
    "Cedar Ln",
    "Elm St",
    "Washington Ave",
    "Maple Dr",
    "Lincoln Blvd",
    "First St",
    "Second Ave",
  ];
  const cities = [
    "New York",
    "Los Angeles",
    "Chicago",
    "Houston",
    "Phoenix",
    "Philadelphia",
    "San Antonio",
    "San Diego",
    "Dallas",
    "San Jose",
  ];
  const states = ["NY", "CA", "IL", "TX", "AZ", "PA", "FL", "OH", "MI", "GA"];
  const countries = [
    "United States",
    "Canada",
    "United Kingdom",
    "Germany",
    "France",
    "Australia",
    "Japan",
    "Brazil",
    "Mexico",
    "Italy",
  ];

  // Faker object structure
  const faker = {
    // Person module
    person: {
      firstName: () => randomElement(firstNames),
      lastName: () => randomElement(lastNames),
      fullName: () => `${faker.person.firstName()} ${faker.person.lastName()}`,
      middleName: () => randomElement(firstNames),
      prefix: () => randomElement(["Mr.", "Mrs.", "Ms.", "Dr.", "Prof."]),
      suffix: () => randomElement(["Jr.", "Sr.", "II", "III", "PhD", "MD"]),
      gender: () => randomElement(["male", "female"]),
      jobTitle: () =>
        randomElement([
          "Manager",
          "Developer",
          "Designer",
          "Analyst",
          "Engineer",
          "Director",
          "Coordinator",
          "Specialist",
          "Consultant",
          "Administrator",
        ]),
    },

    // Internet module
    internet: {
      email: () => {
        const firstName = faker.person.firstName().toLowerCase();
        const lastName = faker.person.lastName().toLowerCase();
        const domain = randomElement(domains);
        const separator = randomElement([".", "_", ""]);
        return `${firstName}${separator}${lastName}${randomInt(
          1,
          999
        )}@${domain}`;
      },
      userName: () => {
        const firstName = faker.person.firstName().toLowerCase();
        const lastName = faker.person.lastName().toLowerCase();
        return `${firstName}${randomElement([
          "_",
          ".",
          "",
        ])}${lastName}${randomInt(10, 99)}`;
      },
      password: () => {
        const chars =
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*";
        let password = "";
        for (let i = 0; i < randomInt(8, 16); i++) {
          password += chars.charAt(Math.floor(Math.random() * chars.length));
        }
        return password;
      },
      url: () => {
        const protocols = ["https"];
        const subdomains = ["www", "app", "api", "blog"];
        const domains = ["example.com", "test.com", "demo.org", "sample.net"];
        return `${randomElement(protocols)}://${randomElement(
          subdomains
        )}.${randomElement(domains)}`;
      },
      domainName: () =>
        randomElement(["example.com", "test.org", "demo.net", "sample.com"]),
      ip: () =>
        `${randomInt(1, 255)}.${randomInt(0, 255)}.${randomInt(
          0,
          255
        )}.${randomInt(1, 255)}`,
      userAgent: () =>
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    },

    // Phone module
    phone: {
      number: () => {
        const formats = [
          "(###) ###-####",
          "###-###-####",
          "### ### ####",
          "+1 ### ### ####",
        ];
        let format = randomElement(formats);
        return format.replace(/#/g, () => randomInt(0, 9));
      },
    },

    // Location module
    location: {
      streetAddress: () => `${randomInt(1, 9999)} ${randomElement(streets)}`,
      city: () => randomElement(cities),
      state: () => randomElement(states),
      zipCode: () => randomInt(10000, 99999).toString(),
      country: () => randomElement(countries),
      latitude: () => (Math.random() * 180 - 90).toFixed(6),
      longitude: () => (Math.random() * 360 - 180).toFixed(6),
    },

    // Company module
    company: {
      name: () => randomElement(companies),
      catchPhrase: () =>
        randomElement([
          "Innovative solutions",
          "Quality service",
          "Excellence in technology",
          "Future-focused approach",
        ]),
      bs: () =>
        randomElement([
          "synergize",
          "leverage",
          "optimize",
          "streamline",
          "innovate",
        ]),
    },

    // Lorem module
    lorem: {
      word: () =>
        randomElement([
          "lorem",
          "ipsum",
          "dolor",
          "sit",
          "amet",
          "consectetur",
          "adipiscing",
          "elit",
          "sed",
          "do",
        ]),
      words: (count = 3) => {
        const words = [];
        for (let i = 0; i < count; i++) {
          words.push(faker.lorem.word());
        }
        return words.join(" ");
      },
      sentence: () => {
        const words = faker.lorem.words(randomInt(4, 18));
        return words.charAt(0).toUpperCase() + words.slice(1) + ".";
      },
      paragraph: () => {
        const sentences = [];
        for (let i = 0; i < randomInt(2, 6); i++) {
          sentences.push(faker.lorem.sentence());
        }
        return sentences.join(" ");
      },
    },

    // Date module
    date: {
      past: (years = 1) => {
        const now = new Date();
        const past = new Date(
          now.getTime() - years * 365 * 24 * 60 * 60 * 1000 * Math.random()
        );
        return past;
      },
      future: (years = 1) => {
        const now = new Date();
        const future = new Date(
          now.getTime() + years * 365 * 24 * 60 * 60 * 1000 * Math.random()
        );
        return future;
      },
      recent: (days = 1) => {
        const now = new Date();
        const recent = new Date(
          now.getTime() - days * 24 * 60 * 60 * 1000 * Math.random()
        );
        return recent;
      },
      birthdate: () => {
        const now = new Date();
        const birth = new Date(
          now.getTime() - randomInt(18, 80) * 365 * 24 * 60 * 60 * 1000
        );
        return birth;
      },
    },

    // Number module
    number: {
      int: (options = {}) => {
        const min = options.min || 0;
        const max = options.max || 999999;
        return randomInt(min, max);
      },
      float: (options = {}) => {
        const min = options.min || 0;
        const max = options.max || 999999;
        const precision = options.precision || 2;
        return parseFloat(
          (Math.random() * (max - min) + min).toFixed(precision)
        );
      },
    },

    // Finance module
    finance: {
      creditCardNumber: () => {
        let number = "4"; // Visa prefix
        for (let i = 0; i < 15; i++) {
          number += randomInt(0, 9);
        }
        return number;
      },
      accountNumber: () => randomInt(100000000, 999999999).toString(),
      amount: () =>
        faker.number.float({ min: 1, max: 1000, precision: 2 }).toFixed(2),
    },

    // Helper functions
    helpers: {
      arrayElement: randomElement,
      randomInt: randomInt,
    },
  };

  // Export for different environments
  if (typeof module !== "undefined" && module.exports) {
    module.exports = { faker };
  } else if (typeof define === "function" && define.amd) {
    define(function () {
      return { faker };
    });
  } else {
    global.faker = faker;
  }
})(typeof window !== "undefined" ? window : global);
